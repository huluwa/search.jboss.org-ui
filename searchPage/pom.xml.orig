<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.jboss.search</groupId>
    <artifactId>web-UI</artifactId>
    <version>0.1</version>
    <packaging>war</packaging>

    <name>search.jboss.org Web UI</name>
    <description/>
    <url>http://search.jboss.org/</url>

    <licenses>
        <license>
            <name>The Apache Software License, Version 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <developers>
        <developer>
            <id>lukas.vlcek</id>
            <name>Lukas Vlcek</name>
            <email>lvlcek@redhat.com</email>
        </developer>
    </developers>

    <issueManagement>
        <system>GitHub Issues</system>
        <url>https://github.com/jbossorg/search-web-ui/issues</url>
    </issueManagement>

    <properties>

        <maven.compiler.source>1.6</maven.compiler.source>
        <maven.compiler.target>1.6</maven.compiler.target>
        <maven.compiler.plugin.version>2.0.2</maven.compiler.plugin.version>

        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <jsframework.version>1.17.0</jsframework.version>
        <jstd.plugin.version>1.3.2.5</jstd.plugin.version>

        <!-- This version of closure library is by default used by jsframework 1.17.0 -->
        <!-- <closure.library.version>v20131014</closure.library.version> -->

        <!-- Compilation level is set in profile -->
        <!--<closure.compiler.level>WHITESPACE_ONLY</closure.compiler.level>-->

    </properties>

    <dependencies>

        <dependency>
            <groupId>com.googlecode.jstd-maven-plugin</groupId>
            <artifactId>jstd-maven-plugin</artifactId>
            <version>${jstd.plugin.version}</version>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <repositories>

        <repository>
            <id>jstd-maven-plugin google code repo</id>
            <url>http://jstd-maven-plugin.googlecode.com/svn/maven2</url>
        </repository>

    </repositories>

    <pluginRepositories>
        <pluginRepository>
            <id>jstd-maven-plugin google code repo</id>
            <url>http://jstd-maven-plugin.googlecode.com/svn/maven2</url>
        </pluginRepository>
    </pluginRepositories>

    <build>

        <finalName>search.jboss.org.web-ui</finalName>

        <plugins>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-clean-plugin</artifactId>
                <version>2.5</version>
                <executions>
                    <!--
                        ==========================================================
                        Delete also src/main/javascript
                        ==========================================================
                    -->
                    <execution>
                        <id>clean-javascript</id>
                        <phase>clean</phase>
                        <goals>
                            <goal>clean</goal>
                        </goals>
                        <configuration>
                            <!--<excludeDefaultDirectories>true</excludeDefaultDirectories>-->
                            <filesets>
                                <fileset>
                                    <directory>${basedir}/src/main/javascript</directory>
                                    <followSymlinks>false</followSymlinks>
                                </fileset>
                            </filesets>
                        </configuration>
                    </execution>
                    <execution>
                        <id>clean-after-test</id>
                        <phase>test</phase>
                        <goals>
                            <goal>clean</goal>
                        </goals>
                        <configuration>
                            <excludeDefaultDirectories>true</excludeDefaultDirectories>
                            <filesets>
                                <fileset>
                                    <directory>${basedir}/src/main/javascript</directory>
                                    <followSymlinks>false</followSymlinks>
                                </fileset>
                            </filesets>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven.compiler.plugin.version}</version>
                <configuration>
                    <source>${maven.compiler.source}</source>
                    <target>${maven.compiler.target}</target>
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>

            <!--
                Perform LESS compilation
                Using https://github.com/marceloverdijk/lesscss-maven-plugin
                To run the compiler manually just execute: mvn lesscss:compile
            -->
            <plugin>
                <groupId>org.lesscss</groupId>
                <artifactId>lesscss-maven-plugin</artifactId>
                <version>1.3.3</version>
                <configuration>
                    <sourceDirectory>${basedir}/src/main/webapp/css/jbosscommunity</sourceDirectory>
                    <outputDirectory>${project.build.directory}/${project.build.finalName}/css</outputDirectory>
                    <compress>true</compress>
                    <includes>
                        <include>bootstrap-default.less</include>
                        <include>bootstrap-community.less</include>
                    </includes>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.6</version>
                <executions>
                    <execution>
                        <id>copy-resources</id>
                        <phase>process-sources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${basedir}/src/main/javascript</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>src/main/javascript_source</directory>
                                    <!--<filtering>true</filtering>-->
                                </resource>
                                <resource>
                                    <directory>src/test/javascript_source</directory>
                                    <!--<excludes>-->
                                    <!--<exclude>**/*_test.js</exclude>-->
                                    <!--<exclude>**/*.md</exclude>-->
                                    <!--</excludes>-->
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>com.googlecode.jstd-maven-plugin</groupId>
                <artifactId>jstd-maven-plugin</artifactId>
                <version>${jstd.plugin.version}</version>
                <configuration>
                    <verbose>true</verbose>
                    <!-- You might need to adjust this depending on your OS.  On Mac,
                         this will launch your default browser -->
                    <browser>open</browser>

                    <port>9876</port>
                    <!--
                        Specify config file path.

                        Now we can run jsTestDriver tests both manually from command line
                        using 'mvn jstd:test' and using IntelliJ IDEA jsTestDriver plugin seamlessly.
                    -->
                    <config>jsTestDriver.conf</config>
                </configuration>
                <executions>
                    <execution>
                        <id>run-tests</id>
                        <goals>
                            <goal>test</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>com.github.jlgrock.javascript-framework</groupId>
                <artifactId>jsar-maven-plugin</artifactId>
                <version>${jsframework.version}</version>
                <extensions>true</extensions>
            </plugin>

            <plugin>
                <groupId>com.github.jlgrock.javascript-framework</groupId>
                <artifactId>jsdependency-maven-plugin</artifactId>
                <version>${jsframework.version}</version>
            </plugin>

            <plugin>
                <groupId>com.github.jlgrock.javascript-framework</groupId>
                <artifactId>closure-compiler-maven-plugin</artifactId>
                <version>${jsframework.version}</version>
                <configuration>
                    <!--<compileLevel>ADVANCED_OPTIMIZATIONS</compileLevel>-->
                    <!--<compileLevel>SIMPLE_OPTIMIZATIONS</compileLevel>-->
                    <!--<compileLevel>WHITESPACE_ONLY</compileLevel>-->
                    <compileLevel>${closure.compiler.level}</compileLevel>
                </configuration>
                <!--
                <dependencies>
                    <dependency>
                        <groupId>com.google.javascript</groupId>
                        <artifactId>closure-compiler</artifactId>
                        <version>${closure.library.version}</version>
                    </dependency>
                </dependencies>
                -->
            </plugin>

            <plugin>
                <groupId>com.github.jlgrock.javascript-framework</groupId>
                <artifactId>closure-testing-maven-plugin</artifactId>
                <version>${jsframework.version}</version>
                <configuration>
                    <prologue>${profile.prologue}</prologue>
                </configuration>
            </plugin>

            <plugin>
                <groupId>com.github.jlgrock.javascript-framework</groupId>
                <artifactId>jspreprocessor-maven-plugin</artifactId>
                <version>${jsframework.version}</version>
            </plugin>

            <!--
            <plugin>
                <groupId>com.github.jlgrock.javascript-framework</groupId>
                <artifactId>jsdocs-maven-plugin</artifactId>
                <version>${jsframework.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>jsar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>com.github.jlgrock.javascript-framework</groupId>
                <artifactId>source-archive-maven-plugin</artifactId>
                <version>${jsframework.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>js-gen-source-archive</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            -->

        </plugins>

    </build>

    <profiles>

        <!-- Do not use this profile for now -->
        <profile>
            <id>test-sync</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <properties>
                <closure.compiler.level>WHITESPACE_ONLY</closure.compiler.level>
                <profile.prologue></profile.prologue>
            </properties>
        </profile>

        <profile>
            <id>test-async</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <closure.compiler.level>WHITESPACE_ONLY</closure.compiler.level>
                <profile.prologue><![CDATA[
                <script>
                    goog.require('goog.testing.ContinuationTestCase');
                    goog.require('goog.testing.jsunit');
                </script>
                ]]></profile.prologue>
            </properties>
        </profile>

        <!-- You should try advanced compilation before each commit into public repo. -->
        <profile>
            <id>advanced</id>
            <properties>
                <closure.compiler.level>ADVANCED_OPTIMIZATIONS</closure.compiler.level>
                <profile.prologue><![CDATA[
                <script>
                    goog.require('goog.testing.ContinuationTestCase');
                    goog.require('goog.testing.jsunit');
                </script>
                ]]></profile.prologue>
            </properties>
        </profile>

        <!--
            ==========================================================
            Used in Jenkins build. It allow to test the application
            directly from the Jenkins [public] folder after the build
            is finished.
            ==========================================================
        -->
        <profile>
            <id>jenkins</id>
            <properties>
                <closure.compiler.level>ADVANCED_OPTIMIZATIONS</closure.compiler.level>
                <!--<closure.compiler.level>SIMPLE_OPTIMIZATIONS</closure.compiler.level>-->
                <!--<closure.compiler.level>WHITESPACE_ONLY</closure.compiler.level>-->
                <profile.prologue><![CDATA[
                <script>
                    goog.require('goog.testing.ContinuationTestCase');
                    goog.require('goog.testing.jsunit');
                </script>
                ]]></profile.prologue>
            </properties>
            <build>
                <plugins>

                    <plugin>

                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-resources-plugin</artifactId>
                        <version>2.6</version>

                        <executions>

                            <!--
                            ==========================================================
                            Copy final compiled/minified js into root of the exploded
                            webapp. This way we can run it directly from the Jenkins.
                            ==========================================================
                            -->
                            <execution>
                                <id>copy-compiled-js-file</id>
                                <!-- here the phase you need -->
                                <phase>package</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <encoding>UTF-8</encoding>
                                    <outputDirectory>${project.build.directory}/${project.build.finalName}/</outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>${project.build.directory}/javascriptFramework/output/compiled</directory>
                                            <includes>
                                                <include>${project.build.finalName}-min.js</include>
                                            </includes>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                        </executions>

                    </plugin>

                    <plugin>

                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <version>1.7</version>

                        <executions>

                            <!--
                            TODO: We can remove in the future...
                            ==========================================================
                            Exclude Logging.js from the compilation/minification
                            ==========================================================
                            -->
                            <!--<execution>-->
                                <!--<id>remove-logging</id>-->
                                <!--<phase>compile</phase>-->
                                <!--<goals>-->
                                    <!--<goal>run</goal>-->
                                <!--</goals>-->
                                <!--<configuration>-->
                                    <!--<tasks>-->
                                        <!--<exec dir="${project.build.directory}/javascriptFramework/output/debugSource/" executable="rm">-->
                                            <!--<arg line=" -vf Logging.js"/>-->
                                        <!--</exec>-->
                                        <!--<exec dir="${project.build.directory}/javascriptFramework/output/assertionSource/" executable="rm">-->
                                            <!--<arg line=" -vf Logging.js"/>-->
                                        <!--</exec>-->
                                    <!--</tasks>-->
                                <!--</configuration>-->
                            <!--</execution>-->

                            <!--
                            ==========================================================
                            Rename the final js file to the name that is used for the
                            local testing. This way we do not have to change the code
                            much. Going forward we need to do this more general.
                            ==========================================================
                            -->
                            <execution>
                                <id>rename-compiled-js-file</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <tasks>
                                        <exec dir="${project.build.directory}/${project.build.finalName}/" executable="mv">
                                            <arg line=" -vf ${project.build.finalName}-min.js search-testing-only.js"/>
                                        </exec>
                                    </tasks>
                                </configuration>
                            </execution>

                        </executions>

                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>
